FROM python:3.7-alpine

ARG DDT_ENV
ARG DDT_SRC_DIR
ARG POETRY_VERSION

ENV PYTHONUNBUFFERED=1

RUN \
mkdir -p "${DDT_SRC_DIR}" && \
pip --disable-pip-version-check install "poetry==$POETRY_VERSION" && \
poetry config settings.virtualenvs.create false

COPY pyproject.toml poetry.lock "${DDT_SRC_DIR}"/
WORKDIR "${DDT_SRC_DIR}"/

RUN \
apk add --no-cache postgresql-libs && \
apk add --no-cache --virtual .build-deps gcc musl-dev postgresql-dev && \
poetry install $(test "${DDT_ENV}" = "production" && echo "--no-dev") --no-interaction --no-ansi && \
apk --purge del .build-deps
