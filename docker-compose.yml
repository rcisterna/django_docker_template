version: '3.7'

services:
  postgresdb:  # Contenedor postgres
    image: postgres:11-alpine
    volumes:
      - vol_postgresdb:/var/lib/postgresql/data
    env_file:
      - .env
    networks:
      - net_postgresdb
  api:  # Contenedor django + gunicorn
    build:
      context: ./
      dockerfile: ./dkr/dockerfile-api
      args:
        - DDT_ENV=${DDT_ENV}
        - DDT_SRC_DIR=${DDT_ROOT}/src
        - POETRY_VERSION=${POETRY_VERSION}
    env_file:
      - .env
    entrypoint:
      - sh
      - ${DDT_ROOT}/conf/ep_api.sh
    volumes:
      - ./api/:${DDT_ROOT}/src/
      - ./dkr/conf:${DDT_ROOT}/conf/
      - vol_static:${DDT_ROOT}/static
      - vol_media:${DDT_ROOT}/media
    networks:
      - net_postgresdb
      - net_api
    depends_on:
      - postgresdb
    restart: 'always'
  nginx:  # Contenedor nginx (reverse proxy)
    image: nginx:1.16-alpine
    ports:
      - ${DDT_PORT}:80
      - 443:443
    env_file:
      - .env
    entrypoint:
      - sh
      - ${DDT_ROOT}/conf/ep_nginx.sh
    volumes:
      - ./dkr/conf/:${DDT_ROOT}/conf/
      - vol_static:${DDT_ROOT}/static
      - vol_media:${DDT_ROOT}/media
      - vol_letsencrypt:/etc/letsencrypt
      - vol_certbot:${DDT_ROOT}/certbot
    networks:
      - net_nginx
      - net_api
    depends_on:
      - api
      - certbot
    restart: 'always'
  certbot:  # Contenedor certbot (certificados SSL)
    image: certbot/certbot
    env_file:
      - .env
    entrypoint:
      - sh
      - ${DDT_ROOT}/conf/ep_certbot.sh
    volumes:
      - ./dkr/conf/:${DDT_ROOT}/conf/
      - vol_letsencrypt:/etc/letsencrypt
      - vol_certbot:${DDT_ROOT}/certbot
    networks:
      - net_nginx
    restart: 'always'

networks:
  net_postgresdb:
    driver: bridge
  net_api:
    driver: bridge
  net_nginx:
    driver: bridge

volumes:
  vol_postgresdb:
  vol_certbot:
  vol_static:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/dkr/vol/static
      o: bind
  vol_media:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/dkr/vol/media
      o: bind
  vol_letsencrypt:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/dkr/vol/letsencrypt
      o: bind
